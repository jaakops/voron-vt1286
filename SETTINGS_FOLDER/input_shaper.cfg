###############
  #Input Shaper Settings
###############


############# BEACON ADXL
[resonance_tester]
accel_chip: beacon
probe_points: 150, 150, 100


# ############# EBB36 CAN ADXL
# [adxl345]
# cs_pin: EBBCan: PB12
# spi_software_sclk_pin: EBBCan: PB10
# spi_software_mosi_pin: EBBCan: PB11
# spi_software_miso_pin: EBBCan: PB2
# axes_map: x,y,z

# [resonance_tester]
# probe_points: 150, 150, 100
# accel_chip: adxl345
# accel_per_hz: 75 #stock 75, increase 25 if noisy


############## #MELLOW NOZZLE ADXL
# [adxl345] 
# cs_pin: adxl:gpio9
# spi_software_sclk_pin: adxl:gpio10
# spi_software_mosi_pin: adxl:gpio11
# spi_software_miso_pin: adxl:gpio12
# axes_map: -x, -y, z

# [resonance_tester]
# accel_chip: adxl345
# probe_points: 150, 150, 80
# accel_per_hz: 75 #stock 75

# [mcu adxl]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625887D30F3A30-if00 
# is_non_critical: True
################


[input_shaper] #IKEA LACK
#ebb36
shaper_type_x: mzv
shaper_freq_x: 84
damping_ratio_x: 0.049
shaper_type_y: ei
shaper_freq_y: 73.6
damping_ratio_y: 0.041
#nozzle
# shaper_type_x: mzv
# shaper_freq_x: 93.8
# damping_ratio_x: 0.057
# shaper_type_y: mzv
# shaper_freq_y: 70
# damping_ratio_y: 0.030

# [input_shaper] #FLOOR
# shaper_type_x: mzv
# shaper_freq_x: 65.8 
# damping_ratio_x: 0.056
# shaper_type_y: mzv
# shaper_freq_y: 42.6
# damping_ratio_y: 0.070

[shaketune]
result_folder: ~/printer_data/config/K-ShakeTune_results
#    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 5
#    The number of results to keep in the result_folder. The oldest results will
#    be automatically deleted after each runs.
keep_raw_data: False
#    If True, the raw CSV files will be kept in the result_folder alongside the
#    PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the
#    printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 300
#    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.


[motors_sync]
axes: x,y    #    Axes on which calibration will be performed.
accel_chip: beacon #adxl345
#    Accelerometers for vibration collection: adxl345 / mpu9250 / lis2dw,
#    etc. Are indicated general or for axis on which calibration is
#    performed, for example - accel_chip_x or accel_chip_y.
##retry_tolerance: 1000
##retries: 10
#    Maximum number of repetitions to achieve a forced threshold of motor
#    synchronization deviations.
head_fan: hotend_fan
#    Toolhead fan, which will be turned off during sync to eliminate noise.
#    This is convenient when the fan has a low temp target and is often
#    turned on, for example in thermal chamber.
##model: exponential 
##model_coeffs: 667.0597965883, 0.1421123870,1140.7911986935


#[gcode_macro motors_sync]
#gcode:
#  SYNC_MOTORS

[gcode_macro C_SYNC_MOTORS]
gcode:
  {% if not printer.motors_sync.applied %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28 #X Y
    {% else %} 
    M117 Already homed. Syncing motors.
    {% endif %}
    #G28 X Y
    
    SYNC_MOTORS
    #G28 Z
  {% else %}
  M117 Motors sync already set, doing nothing.
  {% endif%}

#rest of [motors_sync] commented out
#chip_filter: median
#    Filter type for data from the accelerometer: 'median' works well in
#    most cases, but some particularly noisy printers (fans, etc.) may
#    require a more powerful filter - 'kalman'. On lis2dw filters disabled.
#median_size: 3
#    Median filter window size.
#kalman_coeffs: 1.1, 1., 1e-1, 1e-2, .5, 1.
#    Simple coefficients describing the kalman filter.
#microsteps: 16
#    Maximum microstepping displacement of the stepper motor rotor. It's
#    not necessary to increase the value above 16 with 20t pulley, these
#    fluctuations are elusive.
#sync_method: default
#    Methods for synchronizing two axes on interconnected kinematics:
#    'alternately' - the axes move alternately, step by step. (default)
#    'synchronous' - the axes move depending on their magnitude, trying
#    to minimizing the delta between axis magnitudes.
#    Methods for synchronizing axis/axes on NOT interconnected kinematics:
#    'sequential' - axes are calibrated sequentially. (default)
#model: linear
#    Model of the dependence of the displacement of microsteps on the
#    shaft of a stepper motor depends on the magnitude of the measured
#    oscillations. Are indicated general or for axis. Supported models:
#    linear, quadratic, power, root, hyperbolic, exponential.
#model_coeffs: 20000, 0
#    Coefficients above the described model, for calculating microsteps.
#    Are indicated general or for axis.
#max_step_size: 3
#    The maximum number of microsteps that the motor can take move at time,
#    to achieve the planned magnitude.
#axes_steps_diff: 4
#    Only for synchronous sync method: microstep difference between two
#    axes to trigger an additional check of the current magnitude on the
#    weaker axis. The typical and minimum value - max_step_size + 1.
#retry_tolerance: 0
#    The forced threshold to which a pair of stepper motors on one belt
#    will have to lower the magnitude of the oscillations. It's recommended
#    to configure in order to filter possible inaccuracies. After several
#    iterations of starting synchronization, you will find the edge, to
#    which this parameter should be omitted.

